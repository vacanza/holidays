name: Check Holiday Updates

on:
  schedule:
    - cron: '0 2 1 * *'  # Run monthly on the 1st at 2 AM UTC
  workflow_dispatch:
    inputs:
      dry_run:
        description: Run in dry-run mode (no issues created)
        required: false
        default: true
        type: boolean
      paths:
        description: Multiline list of paths/globs to check (one per line, leave empty for default)
        required: false
        default: ''
        type: string
      threshold_days:
        description: Age threshold for files in days
        required: false
        default: '120'
        type: string

jobs:
  check-updates:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Checkout holidays repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0  # Get full commit history to accurately determine when each file was last modified
          repository: vacanza/holidays
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Holiday Updates
        id: check-updates
        uses: vacanza/aux/.github/actions/check-holiday-updates@main
        with:
          dry_run: ${{ inputs.dry_run || false }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths: ${{ inputs.paths || 'holidays/countries/*.py' }}
          threshold_days: ${{ inputs.threshold_days || '120' }}

      - name: Display results
        run: |
          echo "üìä Check Holiday Updates Results:"
          echo "  ‚Ä¢ Outdated files found: ${{ steps.check-updates.outputs.outdated_files_count }}"
          echo "  ‚Ä¢ Issues created: ${{ steps.check-updates.outputs.issues_created_count }}"

          if [ "${{ steps.check-updates.outputs.outdated_files_count }}" -gt "0" ]; then
            echo "‚ö†Ô∏è  Some holiday files may need updating!"
          else
            echo "‚úÖ All holiday files are up to date!"
          fi
